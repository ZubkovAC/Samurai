{"version":3,"sources":["HOC/WithAuthRedirect.tsx","utils/validator/validors.tsx","components/common/FormsControls/FormsControls.tsx","components/common/FormsControls/FormsControls.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/reselect/es/index.js","redux/users-selesctors.tsx","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["mapStateToPropsRedirect","state","isAuth","auth_user","WithAuthRedirect","Component","connect","props","restProps","to","required","value","maxLengthCreator","maxLength","length","undefined","FormControl","input","meta","hasError","touched","error","className","css","formControl","children","Textarea","child","Input","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","getDependencies","funcs","dependencies","every","dep","dependencyTypes","map","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","getUserLoad","users","getPageSize","filter","u","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getProfile","profile","getUserId","userId","getStatusProfile","status","getAuthorizeUserId","getIsAuth","ProfileStatus","useState","editMode","setEditMode","setStatus","useEffect","onKeyUp","e","key","updateStatus","onChange","currentTarget","onBlur","autoFocus","onDoubleClick","ProfileInfo","React","memo","src","photos","large","alt","Post","post","message","likecount","maxLength40","MyPosts","postData","postsProfile","t","id","ProfileFormReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","type","component","placeholder","validate","content","addPostProfile","ProfileInput","MyPostsContainer","dispatch","Profile","ProfileContainer","this","match","authorizeUserId","history","setUserStatus","setUserProfile","compose","withRouter"],"mappings":"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","file":"static/js/4.0b2afede.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\"\r\nimport React, {ComponentType} from \"react\"\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport type MapStateToPropsTypeRedirect = {\r\n    isAuth:boolean\r\n}\r\nlet mapStateToPropsRedirect = (state: AppStateType) :MapStateToPropsTypeRedirect => ({\r\n    isAuth:state.auth_user.isAuth\r\n})\r\n\r\nexport function WithAuthRedirect <T> (Component:ComponentType<T>) {\r\n    function RedirectComponent(props:MapStateToPropsTypeRedirect) {\r\n\r\n        let {isAuth,...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to='/login'/>\r\n\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}\r\n","export interface AddUserParamsType  {\r\n    value :string\r\n}\r\n\r\n\r\nexport const required = (value:AddUserParamsType) => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength:number)=> (value:any) =>\r\n    value && value.length > maxLength ? `Must be ${maxLength} characters or less` : undefined\r\n\r\n","\r\nimport css from './FormsControls.module.css'\r\nimport React from \"react\"\r\ntype TextAreaProps ={\r\n    input:string\r\n    meta:any\r\n    child:any\r\n}\r\n\r\nexport const FormControl:React.FC<TextAreaProps> = ({input, meta,...restProps})=>{\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={css.formControl + '' + ( hasError ? css.error : '' ) }>\r\n            {restProps.children}\r\n            <div>\r\n                { hasError && <span>{meta.error}</span>}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea:React.FC<TextAreaProps> = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input:React.FC<TextAreaProps> = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3d2ED\",\"error\":\"FormsControls_error__1gDGv\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import {AppStateType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n//UsersContainer\r\nexport const getUserLoad = (state:AppStateType) => {\r\n    return state.users.users\r\n}\r\n// reselect (max dependence - 3 ) need from state - filter, map, reduce, ... - analog useCallback (max dependence -1 )\r\n// next reselect 3x3 = max 9 - controlled parametrs .... 9x3 = 27 ....\r\nexport const getUserLoadSuper = createSelector(getUserLoad,(users) => {\r\n    users.filter( u => true)\r\n})\r\n/*export const getUserLoadSuperAndgetPageSize = createSelector(getUserLoad,getPageSize(users,pageSize) => {\r\n    users.filter( u => true)                        -- no good x2 params\r\n})*/\r\nexport const getPageSize = (state:AppStateType) => {\r\n    return state.users.pageSize\r\n}\r\nexport const getTotalUsersCount = (state:AppStateType) => {\r\n    return state.users.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state:AppStateType) => {\r\n    return state.users.currentPage\r\n}\r\nexport const getIsFetching = (state:AppStateType) => {\r\n    return state.users.isFetching\r\n}\r\nexport const getFollowingInProgress = (state:AppStateType) => {\r\n    return state.users.followingInProgress\r\n}\r\n\r\n//UsersContainer\r\n\r\nexport const getProfile = (state:AppStateType) => {\r\n    return state.profile.profile\r\n}\r\nexport const getUserId = (state:AppStateType) => {\r\n    return state.profile.userId\r\n}\r\nexport const getStatusProfile = (state:AppStateType) => {\r\n    return state.profile.status\r\n}\r\nexport const getAuthorizeUserId = (state:AppStateType) => {\r\n    return state.auth_user.userId\r\n}\r\n\r\n\r\n//UsersContainer & //UsersContainer\r\nexport const getIsAuth = (state:AppStateType) => {\r\n    return state.auth_user.isAuth\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__33Nji\",\"photo\":\"Profile_photo__1olw0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__2GZvK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__2YDBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3H89X\"};","import React, {useEffect, useState} from \"react\"\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus:(status:string)=>void\r\n\r\n}\r\n\r\nexport const ProfileStatus = (props: ProfileStatusPropsType) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n\r\n    useEffect( ()=>{\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const DoubleCLick = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivetedEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode ?\r\n                <span onDoubleClick={DoubleCLick}>\r\n                {status ? status :'hello' }\r\n                </span>\r\n                :\r\n                <input\r\n                    onKeyUp={(e) => {\r\n                        if (e.key === \"Enter\") {\r\n                            setEditMode(false)\r\n                            props.updateStatus(status)\r\n                        }\r\n                    }}\r\n                    onChange={(e) => {\r\n                        setStatus(e.currentTarget.value)\r\n                    }} value={status}\r\n                    onBlur={deactivetedEditMode}\r\n                    autoFocus={true}\r\n                />\r\n\r\n            }\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport css from './ProfileInfo.module.css'\r\nimport {ProfilePropsType} from \"../../../redux/Profile-reducer/Profile_Reducer\";\r\nimport {ProfileStatus} from './ProfileStatus'\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfilePropsType\r\n    status:string\r\n    updateStatus:(status:string)=>void\r\n}\r\n\r\nexport const ProfileInfo =React.memo( (props:MapStateToPropsType) =>{\r\n        return(\r\n            <div className={css.ProfileInfo}>\r\n\r\n                    <img src={props.profile.photos.large\r\n                        ?  props.profile.photos.large\r\n                        : 'https://pbs.twimg.com/profile_images/948912339977457664/kKj0B_jV_400x400.jpg' } alt='Avatar'/>\r\n                    <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\r\n                    <h5>photo+discription</h5>\r\n\r\n            </div>\r\n        )\r\n})","import React from \"react\";\r\nimport css from './Post.module.css'\r\n\r\nexport type PostPropsType ={\r\n    message:string\r\n    likecount:number\r\n}\r\n\r\nexport const Post = (props:PostPropsType) => {\r\n    return (\r\n        <div className={css.post}>\r\n            <div>\r\n                <img src=\"https://img.favpng.com/11/20/6/ninja-computer-icons-avatar-samurai-png-favpng-mJeFV4xf9mPrz2cwALkbspCd4.jpg\" alt=\"ninja\"/>\r\n                {props.message}\r\n            </div>\r\n            <span> like {props.likecount}</span>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport css from './MyPosts.module.css'\r\nimport {Post} from \"./Post/Post\";\r\nimport { ProfilePropsContainerType } from \"./MyPostsContainer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validator/validors\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\ntype ProfileFormProps = {\r\n    ProfileInput:string\r\n}\r\nconst maxLength40 =  maxLengthCreator(40)\r\nexport const MyPosts = React.memo((props:ProfilePropsContainerType) => {\r\n\r\n    let postData =  props.profile.postsProfile.map( t => <Post key={t.id} message={t.message} likecount={t.likecount}/>)\r\n\r\n    let addPost = (value:ProfileFormProps)=>{\r\n        props.addPostProfile(value.ProfileInput)\r\n    }\r\n\r\n\r\n    const ProfileForm :React.FC<InjectedFormProps<ProfilePropsContainerType & ProfileFormProps>> = (props)=>{\r\n        return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <Field\r\n                    name=\"ProfileInput\" type='text' component={Textarea}\r\n                    placeholder='Message' validate={[required, maxLength40]}\r\n                />\r\n                <div>\r\n                    <button>add message</button>\r\n                </div>\r\n\r\n\r\n            </form>\r\n        )\r\n    }\r\n\r\n    const ProfileFormReduxForm = reduxForm<ProfilePropsContainerType & ProfileFormProps> ({ form: 'ProfileForm' })(ProfileForm)\r\n\r\n    return (\r\n        <div className={css.content}>\r\n            <h3>My post</h3>\r\n            <div>\r\n                <h4> New Post</h4>\r\n            </div>\r\n            <div>\r\n                <ProfileFormReduxForm  onSubmit={addPost}/>\r\n            </div>\r\n            <div >\r\n                { postData }\r\n            </div>\r\n        </div>\r\n    )\r\n})","import {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport { AppStateType } from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {addPostProfile, InitialProfileStateType} from \"../../../redux/Profile-reducer/Profile_Reducer\";\r\n\r\n\r\nexport type ProfilePropsContainerType =  MapDispatchPropsType & MapStatePropsType\r\n\r\ntype MapDispatchPropsType = {\r\n    addPostProfile: (value:string) =>void\r\n}\r\ntype MapStatePropsType = {\r\n    profile:InitialProfileStateType\r\n}\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state:AppStateType) : MapStatePropsType  =>{\r\n    return {\r\n        profile:state.profile\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch):MapDispatchPropsType =>{\r\n    return {\r\n        addPostProfile:(value:string)=>{\r\n            dispatch(addPostProfile(value))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)","import React from \"react\";\r\nimport css from \"./Profile.module.css\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfilePropsType} from \"../../redux/Profile-reducer/Profile_Reducer\";\r\n\r\ntype MapAllToProfilePropsType = {\r\n    profile: ProfilePropsType\r\n    status:string\r\n    updateStatus:(status:string)=>void\r\n}\r\n\r\nexport const Profile =React.memo( (props:MapAllToProfilePropsType)=>{\r\n    return(\r\n        <div className={css.content}>\r\n\r\n            <ProfileInfo status={props.status} updateStatus={props.updateStatus} profile={props.profile}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    ProfilePropsType,\r\n    setUserProfile, setUserStatus, updateStatus,\r\n} from \"../../redux/Profile-reducer/Profile_Reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Preloader} from \"../common/Preloader/preloader\";\r\nimport {withRouter, RouteComponentProps} from \"react-router-dom\";\r\nimport {WithAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getIsAuth, getProfile, getUserId, getStatusProfile, getAuthorizeUserId} from \"../../redux/users-selesctors\";\r\n\r\ntype PathParamsType ={\r\n    userId:string\r\n\r\n}\r\ntype MapStateToPropsType = {\r\n    profile: ProfilePropsType | null\r\n    userId:number\r\n    status:string\r\n    isAuth:boolean\r\n    authorizeUserId:number\r\n}\r\n\r\n\r\ntype MapDispatchPropsType = {\r\n    setUserProfile: (userId:number)=>void\r\n    setUserStatus: (userId:number)=>void\r\n    updateStatus: (status:string)=>void\r\n\r\n}\r\n\r\n\r\ntype ProfileContainerPropsType = MapStateToPropsType & MapDispatchPropsType & PathParamsType\r\ntype CommonPropsType = RouteComponentProps <PathParamsType> & ProfileContainerPropsType\r\n\r\n\r\nexport class ProfileContainer extends React.Component<CommonPropsType> {\r\n\r\n    componentDidMount(): void {\r\n        let userId= +this.props.match.params.userId\r\n        if (!userId){\r\n            userId=this.props.authorizeUserId\r\n            if (!userId){\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.setUserStatus(userId)\r\n        this.props.setUserProfile(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n             this.props.profile ?\r\n\r\n                 <Profile {...this.props}  profile={this.props.profile} status={this.props.status}\r\n                          updateStatus={this.props.updateStatus}/> :  <Preloader/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) :MapStateToPropsType => ({\r\n\r\n    profile: getProfile(state),\r\n    userId:getUserId(state),\r\n    status:getStatusProfile(state),\r\n    isAuth:getIsAuth(state),\r\n    authorizeUserId:getAuthorizeUserId(state)\r\n\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {setUserProfile,setUserStatus,updateStatus}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n"],"sourceRoot":""}