{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","HOC/WithAuthRedirect.tsx","components/SaintPetersburg/SaintPetersburg.module.css","components/SaintPetersburg/SPBprofile/SPBprofileInfo.module.css","components/SaintPetersburg/SPBposts/SPBposts.module.css","components/SaintPetersburg/SPBposts/SPBpost/SPBpost.module.css","components/SaintPetersburg/SPBprofile/SPBprofile.tsx","components/SaintPetersburg/SPBposts/SPBpost/SPBpost.tsx","components/SaintPetersburg/SPBposts/SPBposts.tsx","components/SaintPetersburg/SPBposts/SPBpostsContainer.tsx","components/SaintPetersburg/SaintPetersburg.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToPropsRedirect","state","isAuth","auth_user","WithAuthRedirect","Component","connect","props","restProps","to","module","exports","SPBprofile","className","css","ProfileInfo","src","alt","SPBpost","post","message","likecount","SPBposts","React","memo","postData","messagesSpbPage","postsData","map","t","id","newPostElement","createRef","content","onChange","text","current","value","updateNewPostChatSPB","ref","chat","onClick","addPostChatSPB","compose","dispatch","SaintPetersburg","SPBpostsContainer"],"mappings":"4IACe,SAASA,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDTM,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,E,kJETLW,EAA0B,SAACC,GAAD,MAAuD,CACjFC,OAAOD,EAAME,UAAUD,SAGpB,SAASE,EAAsBC,GAWlC,OADiCC,YAAQN,EAARM,EATjC,SAA2BC,GAAoC,IAEtDL,EAAuBK,EAAvBL,OAAUM,EAF2C,YAE9BD,EAF8B,YAI1D,OAAKL,EAEE,kBAACG,EAAcG,GAFF,kBAAC,IAAD,CAAUC,GAAG,gB,oBChBzCC,EAAOC,QAAU,CAAC,QAAU,mC,oBCA5BD,EAAOC,QAAU,CAAC,YAAc,sC,oBCAhCD,EAAOC,QAAU,CAAC,QAAU,4B,oBCA5BD,EAAOC,QAAU,CAAC,KAAO,wB,gGCEZC,EAAa,WACtB,OACI,yBAAKC,UAAWC,IAAIC,aAChB,6BACI,yBAAKC,IAAI,kDAAkDC,IAAI,YAEnE,oD,oCCFCC,EAAU,SAACX,GACpB,OACI,yBAAKM,UAAWC,IAAIK,MAChB,6BACI,yBAAKH,IAAI,8GAA8GC,IAAI,UAC1HV,EAAMa,SAEX,uCAAab,EAAMc,aCRlBC,EAAWC,IAAMC,MAAK,SAACjB,GAEhC,IAAIkB,EAAYlB,EAAMmB,gBAAgBC,UAAUC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAS1C,IAAK0C,EAAEC,GAAIV,QAASS,EAAET,QAASC,UAAWQ,EAAER,eAE3GU,EAAiBR,IAAMS,YAU3B,OACI,yBAAKnB,UAAWC,IAAImB,SAChB,uCACA,6BACI,0CAEJ,6BACI,6BACI,8BAAUC,SAbL,WACjB,IAAIC,EAAOJ,EAAeK,QAAQC,MAClC9B,EAAM+B,qBAAqBH,IAYLI,IAAKR,EACLM,MAAO9B,EAAMmB,gBAAgBc,QAE5C,6BACI,4BAAQC,QAtBT,WACVlC,EAAMmC,mBAqBK,cAIP,6BACMjB,O,iCCAHkB,cACXrC,aApBkB,SAACL,GAAD,MAAgD,CAC9DyB,gBAAgBzB,EAAMyB,oBAML,SAACkB,GACtB,MAAO,CACHN,qBAAsB,SAACH,GACnBS,EAASN,YAAqBH,KAElCO,eAAe,WACXE,EAASF,oBAQjBtC,IAFWuC,CAEOrB,GCzBPuB,UARS,WACpB,OACI,yBAAKhC,UAAWC,IAAImB,SAChB,kBAAC,EAAD,MACA,kBAACa,EAAD","file":"static/js/5.2816624e.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import {Redirect} from \"react-router-dom\"\r\nimport React, {ComponentType} from \"react\"\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport type MapStateToPropsTypeRedirect = {\r\n    isAuth:boolean\r\n}\r\nlet mapStateToPropsRedirect = (state: AppStateType) :MapStateToPropsTypeRedirect => ({\r\n    isAuth:state.auth_user.isAuth\r\n})\r\n\r\nexport function WithAuthRedirect <T> (Component:ComponentType<T>) {\r\n    function RedirectComponent(props:MapStateToPropsTypeRedirect) {\r\n\r\n        let {isAuth,...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to='/login'/>\r\n\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"SaintPetersburg_content__2XNo8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"SPBprofileInfo_ProfileInfo__puJwz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"SPBposts_content__2T7rB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"SPBpost_post__7UNz7\"};","import React from \"react\";\r\nimport css from './SPBprofileInfo.module.css'\r\n\r\nexport const SPBprofile = () =>{\r\n    return(\r\n        <div className={css.ProfileInfo}>\r\n            <div>\r\n                <img src=\"https://krasivye-mesta.ru/img/Palace-Square.jpg\" alt=\"SaintP\"/>\r\n            </div>\r\n            <div>\r\n                photo+discription\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport css from './SPBpost.module.css'\r\n\r\nexport type PostPropsType ={\r\n    message:string\r\n    likecount:number\r\n}\r\nexport const SPBpost = (props:PostPropsType) => {\r\n    return (\r\n        <div className={css.post}>\r\n            <div>\r\n                <img src=\"https://img.favpng.com/11/20/6/ninja-computer-icons-avatar-samurai-png-favpng-mJeFV4xf9mPrz2cwALkbspCd4.jpg\" alt=\"ninja\"/>\r\n                {props.message}\r\n            </div>\r\n            <span> like {props.likecount}</span>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport css from './SPBposts.module.css'\r\nimport {SPBpost} from \"./SPBpost/SPBpost\";\r\nimport {MapAlltoSpbPropsType} from \"./SPBpostsContainer\";\r\n\r\n\r\nexport const SPBposts = React.memo((props:MapAlltoSpbPropsType) => {\r\n\r\n    let postData =  props.messagesSpbPage.postsData.map( t => <SPBpost key={t.id} message={t.message} likecount={t.likecount}/>)\r\n\r\n    let newPostElement = React.createRef<any>()\r\n    let addPost = ()=>{\r\n        props.addPostChatSPB()\r\n    }\r\n\r\n    const onPostChange = () =>{\r\n        let text = newPostElement.current.value\r\n        props.updateNewPostChatSPB(text)\r\n    }\r\n\r\n    return (\r\n        <div className={css.content}>\r\n            <h3>My post</h3>\r\n            <div>\r\n                <h4> New Post</h4>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={onPostChange}\r\n                              ref={newPostElement}\r\n                              value={props.messagesSpbPage.chat}/>\r\n                </div>\r\n               <div>\r\n                   <button onClick={addPost} >add post</button>\r\n               </div>\r\n\r\n            </div>\r\n            <div >\r\n                { postData }\r\n            </div>\r\n        </div>\r\n    )\r\n})","import {SPBposts} from \"./SPBposts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {addPostChatSPB, InitialSPBStateType, updateNewPostChatSPB} from \"../../../redux/SPB-reducer/SPB_Reducer\";\r\nimport React from \"react\";\r\nimport {WithAuthRedirect} from \"../../../HOC/WithAuthRedirect\";\r\n\r\n\r\nexport type MapAlltoSpbPropsType = MapStateToSpbPropsType & MapDispatchToSpbPropsType\r\n\r\ntype MapStateToSpbPropsType = {\r\n    messagesSpbPage:InitialSPBStateType\r\n}\r\n\r\ntype MapDispatchToSpbPropsType = {\r\n    updateNewPostChatSPB:(text:string)=>void\r\n    addPostChatSPB:()=>void\r\n}\r\nlet mapStateToProps = (state:AppStateType) :MapStateToSpbPropsType =>({\r\n        messagesSpbPage:state.messagesSpbPage,\r\n})\r\n\r\n\r\n\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch):MapDispatchToSpbPropsType =>{\r\n    return {\r\n        updateNewPostChatSPB: (text:string)=>{\r\n            dispatch(updateNewPostChatSPB(text))\r\n        },\r\n        addPostChatSPB:()=>{\r\n            dispatch(addPostChatSPB())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    WithAuthRedirect)(SPBposts)\r\n","import React from \"react\";\r\nimport css from \"./SaintPetersburg.module.css\";\r\nimport {SPBprofile} from \"./SPBprofile/SPBprofile\";\r\nimport SPBpostsContainer from \"./SPBposts/SPBpostsContainer\";\r\n\r\n\r\n\r\nconst SaintPetersburg = ()=>{\r\n    return(\r\n        <div className={css.content}>\r\n            <SPBprofile/>\r\n            <SPBpostsContainer/>\r\n        </div>\r\n    )\r\n}\r\nexport default SaintPetersburg"],"sourceRoot":""}